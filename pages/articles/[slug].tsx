import { GetStaticProps } from "next";
import Head from "next/head";
import { ParsedUrlQuery } from "querystring";
import React from "react";
import Header from "../../components/Header";
import Body from "../../components/Library/Body";
import { sanityClient, urlFor } from "../../sanity";
import { Article } from "../../types/types.articles";
// import { IPost } from "../../types";


interface Props {
  post: Article;
}

interface IParams extends ParsedUrlQuery {
  slug: string;
}

export const Post = ({ post }: Props) => {
  return (
    <div>
      <Head>
        <title>Article | {post.title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className="my-20 mx-5">
        <article>
          <>
            <h1 className="text-4xl font-extrabold pb-5">{post.title}</h1>
            <img src={urlFor(post.mainImage).url()} alt="" />
            <Body body={post.body}/>
          </>
        </article>
      </main>
    </div>
  );
};

export default Post;

export const getStaticPaths = async () => {
  const query = `
  *[_type == 'post']{
    _id,
    title,
    description,
    mainImage,
    _createdAt,
    slug,
    body,
  }
  `;

  const posts = await sanityClient.fetch(query);

  const paths: any = [];

  posts.forEach((post: Article) => {
    paths.push({ params: { slug: post?.slug?.current } });
  });

  return {
    paths: paths,
    fallback: false,
  };
};

export const getStaticProps: GetStaticProps = async (context) => {
  const { slug } = context.params as IParams;

  const query = `*[_type == 'post' && slug.current == $slug][0]{
    _id,
    title,
    description,
    mainImage,
    _createdAt,
    slug,
    body,
  }`;

  const post = await sanityClient.fetch(query, { slug: slug });

  if (!post) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      post,
    },
  };
};
